package com.uth.ev_dms.controllers;

import com.uth.ev_dms.domain.Promotion;
import com.uth.ev_dms.service.PromotionService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/admin/promotions")
public class PromotionController {

    private final PromotionService promotionService;

    @Autowired
    public PromotionController(PromotionService promotionService) {
        this.promotionService = promotionService;
    }

    // üìã Hi·ªÉn th·ªã danh s√°ch khuy·∫øn m√£i
    @GetMapping
    public String listPromotions(Model model) {
        model.addAttribute("promotions", promotionService.getAllPromotions());
        return "admin/promotions/list";
    }

    // ‚ûï Form th√™m m·ªõi
    @GetMapping("/new")
    public String showAddForm(Model model) {
        model.addAttribute("promotion", new Promotion());
        return "admin/promotions/form";
    }

    // üíæ L∆∞u khuy·∫øn m√£i m·ªõi
    @PostMapping
    public String savePromotion(@ModelAttribute Promotion promotion) {
        promotionService.savePromotion(promotion);
        return "redirect:/admin/promotions";
    }

    // üñäÔ∏è S·ª≠a khuy·∫øn m√£i
    @GetMapping("/edit/{id}")
    public String showEditForm(@PathVariable Long id, Model model) {
        Promotion promotion = promotionService.getPromotionById(id)
                .orElseThrow(() -> new IllegalArgumentException("Kh√¥ng t√¨m th·∫•y khuy·∫øn m√£i ID: " + id));
        model.addAttribute("promotion", promotion);
        return "admin/promotions/form";
    }

    // üóëÔ∏è X√≥a khuy·∫øn m√£i
    @GetMapping("/delete/{id}")
    public String deletePromotion(@PathVariable Long id) {
        promotionService.deletePromotion(id);
        return "redirect:/admin/promotions";
    }
}
